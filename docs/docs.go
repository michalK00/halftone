// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Micha≈Ç Klemens"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/collections": {
            "get": {
                "description": "Gets all collections",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get all collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.CollectionDB"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates one collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Create one collection",
                "parameters": [
                    {
                        "description": "Collection to create",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.createCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/collection.createCollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            }
        },
        "/collections/{collectionId}/galleries": {
            "get": {
                "description": "gets all galleries of a collection with collectionId.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get all galleries of a collection.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.GalleryDB"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates one gallery in collection with collectionId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Create one gallery",
                "parameters": [
                    {
                        "description": "Gallery to create",
                        "name": "gallery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gallery.createGalleryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/gallery.createGalleryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            }
        },
        "/collections/{collectionId}/galleries/{galleryId}/generate": {
            "post": {
                "description": "Generate a QR code from a given URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QR"
                ],
                "summary": "Generate QR code",
                "parameters": [
                    {
                        "description": "QR Generation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gallery.generateQrRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/qr": {
            "post": {
                "description": "Generate a QR code from a given URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QR"
                ],
                "summary": "Generate QR code",
                "parameters": [
                    {
                        "description": "QR Generation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qr.QrGenerationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "collection.createCollectionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "collection.createCollectionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "domain.CollectionDB": {
            "type": "object",
            "properties": {
                "galleries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.GalleryDB"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.GalleryDB": {
            "type": "object",
            "properties": {
                "expiry_date": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "fiber.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "gallery.createGalleryRequest": {
            "type": "object",
            "properties": {
                "expiry_date": {
                    "type": "string",
                    "example": "2023-12-31T23:59:59Z"
                },
                "name": {
                    "type": "string",
                    "example": "Example Gallery"
                }
            }
        },
        "gallery.createGalleryResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "gallery.generateQrRequest": {
            "description": "Request body for generating a QR code",
            "type": "object",
            "properties": {
                "url": {
                    "description": "URL to be encoded in the QR code",
                    "type": "string",
                    "example": "https://example.com"
                }
            }
        },
        "qr.QrGenerationRequest": {
            "description": "Request body for generating a QR code",
            "type": "object",
            "properties": {
                "url": {
                    "description": "URL to be encoded in the QR code",
                    "type": "string",
                    "example": "https://example.com"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Studio Ginger - QR code generator",
	Description:      "Image gallery that provides uploading images",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
