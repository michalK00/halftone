definitions:
  api.createCollectionRequest:
    properties:
      name:
        type: string
    type: object
  api.createCollectionResponse:
    properties:
      id:
        type: string
    type: object
  api.createGalleryRequest:
    properties:
      name:
        example: Example Gallery
        type: string
    type: object
  api.createGalleryResponse:
    properties:
      id:
        type: string
    type: object
  api.getPhotoResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      originalFilename:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  api.photoUploadRequest:
    properties:
      originalFilename:
        type: string
    type: object
  api.photoUploadResponse:
    properties:
      id:
        type: string
      originalFilename:
        type: string
      presignedPostRequest:
        $ref: '#/definitions/s3.PresignedPostRequest'
    type: object
  api.rescheduleGallerySharingRequest:
    properties:
      expiryDate:
        description: 'example: "2024-12-31T23:59:59Z"'
        type: string
    type: object
  api.shareGalleryRequest:
    properties:
      sharingExpiry:
        type: string
    type: object
  api.shareGalleryResponse:
    properties:
      accessToken:
        type: string
      galleryId:
        type: string
      shareUrl:
        type: string
      sharingExpiry:
        type: string
    type: object
  api.updateCollectionRequest:
    properties:
      name:
        type: string
    type: object
  api.updateGalleryRequest:
    properties:
      name:
        example: Example Gallery
        type: string
    type: object
  domain.CollectionDB:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  domain.GalleryDB:
    properties:
      collectionId:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      sharingOptions:
        $ref: '#/definitions/domain.SharingOptions'
      updatedAt:
        type: string
    type: object
  domain.PhotoDB:
    properties:
      collectionId:
        type: string
      createdAt:
        type: string
      galleryId:
        type: string
      id:
        type: string
      objectKey:
        type: string
      originalFilename:
        type: string
      status:
        $ref: '#/definitions/domain.PhotoStatus'
      updatedAt:
        type: string
    type: object
  domain.PhotoStatus:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Pending
    - Uploaded
  domain.SharingOptions:
    properties:
      accessToken:
        type: string
      sharingCleanupJob:
        type: string
      sharingEnabled:
        type: boolean
      sharingExpiryDate:
        type: string
      sharingUrl:
        type: string
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  s3.PresignedPostRequest:
    properties:
      url:
        description: Represents the Base URL to make a request to
        type: string
      values:
        additionalProperties:
          type: string
        description: |-
          Values is a key-value map of values to be sent as FormData
          these values are not encoded
        type: object
    type: object
info:
  contact:
    name: Micha≈Ç Klemens
  title: Halftone
  version: "0.1"
paths:
  /api/v1/collections:
    get:
      consumes:
      - '*/*'
      description: Gets all collections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.CollectionDB'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get collections
      tags:
      - collections
    post:
      consumes:
      - application/json
      description: Creates one collection
      parameters:
      - description: Collection to create
        in: body
        name: collections
        required: true
        schema:
          $ref: '#/definitions/api.createCollectionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.createCollectionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Map'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create collection
      tags:
      - collections
  /api/v1/collections/{collectionId}:
    delete:
      consumes:
      - '*/*'
      description: Deletes specific collection
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete collection
      tags:
      - collections
    get:
      consumes:
      - '*/*'
      description: Gets specific collection
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.CollectionDB'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get collection
      tags:
      - collections
    put:
      consumes:
      - '*/*'
      description: Updates specific collection
      parameters:
      - description: Collection update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateCollectionRequest'
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.CollectionDB'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Map'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update collection
      tags:
      - collections
  /api/v1/collections/{collectionId}/galleries:
    get:
      consumes:
      - '*/*'
      description: gets all galleries of a collection with collectionId.
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.GalleryDB'
            type: array
      summary: Get all galleries of a collection.
      tags:
      - collections
    post:
      consumes:
      - application/json
      description: Creates one gallery in collection with collectionId
      parameters:
      - description: Gallery to create
        in: body
        name: galleries
        required: true
        schema:
          $ref: '#/definitions/api.createGalleryRequest'
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.createGalleryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create one gallery
      tags:
      - collections
  /api/v1/collections/{collectionId}/galleryCount:
    get:
      consumes:
      - application/json
      description: Returns the total number of galleries in a specific collection
      parameters:
      - description: Collection ID (MongoDB ObjectID hex string)
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gallery count
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Collection not found or invalid ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get gallery count for a collection
      tags:
      - collections
  /api/v1/galleries/{galleryId}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific gallery
      parameters:
      - description: Gallery ID
        in: path
        name: galleryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete gallery
      tags:
      - galleries
    get:
      consumes:
      - application/json
      description: Retrieves a specific gallery by its ID
      parameters:
      - description: Gallery ID
        in: path
        name: galleryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GalleryDB'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get gallery
      tags:
      - galleries
    put:
      consumes:
      - application/json
      description: Updates an existing gallery's information
      parameters:
      - description: Gallery ID
        in: path
        name: galleryId
        required: true
        type: string
      - description: Gallery update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateGalleryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update gallery
      tags:
      - galleries
  /api/v1/galleries/{galleryId}/photos:
    get:
      consumes:
      - application/json
      description: Retrieves all photos from a specific gallery, including their signed
        URLs
      parameters:
      - description: Gallery ID (MongoDB ObjectID)
        format: objectid
        in: path
        name: galleryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.getPhotoResponse'
        "404":
          description: Gallery not found or invalid ID
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Server error while retrieving photos
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get gallery photos
      tags:
      - photos
    post:
      consumes:
      - application/json
      description: Creates new photo entries in a gallery and returns pre-signed URLs
        for uploading the actual photo files
      parameters:
      - description: Gallery ID
        format: objectId
        in: path
        name: galleryId
        required: true
        type: string
      - description: Photo upload requests
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/api.photoUploadRequest'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created photo entries with upload URLs
          schema:
            items:
              $ref: '#/definitions/api.photoUploadResponse'
            type: array
        "400":
          description: Invalid request body or gallery ID
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Gallery not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Upload photos to a gallery
      tags:
      - photos
      - gallery
  /api/v1/galleries/{galleryId}/share:
    post:
      consumes:
      - application/json
      description: Create a shareable link for a gallery with an expiration date
      parameters:
      - description: Gallery ID
        in: path
        name: galleryId
        required: true
        type: string
      - description: Share Gallery Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.shareGalleryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.shareGalleryResponse'
        "400":
          description: Invalid request body or expiry date
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Gallery not found
          schema:
            additionalProperties:
              type: string
            type: object
        "405":
          description: Sharing already active
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Share Gallery
      tags:
      - Gallery
  /api/v1/photos/{photoId}:
    delete:
      consumes:
      - application/json
      description: 'Deletes a specific photo by ID (Note: AWS cleanup pending implementation)'
      parameters:
      - description: Photo ID (MongoDB ObjectID)
        format: objectid
        in: path
        name: photoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Photo successfully deleted
        "404":
          description: Photo not found or invalid ID
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Server error while deleting photo
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete photo
      tags:
      - photos
  /api/v1/photos/{photoId}/confirm:
    put:
      consumes:
      - application/json
      description: Confirms that a photo has been successfully uploaded by updating
        its status
      parameters:
      - description: Photo ID (MongoDB ObjectID)
        format: objectid
        in: path
        name: photoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PhotoDB'
        "404":
          description: Photo not found or invalid ID
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Server error while confirming upload
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Confirm photo upload
      tags:
      - photos
  /api/v1/qr:
    get:
      consumes:
      - application/json
      description: Generates a QR code image in PNG format from a provided URL
      parameters:
      - description: URL to encode in QR code
        in: query
        name: url
        required: true
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: QR code image in PNG format
          schema:
            type: file
        "400":
          description: Invalid or missing URL parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error during QR generation
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Generate QR code image from URL
      tags:
      - QR
  /galleries/{galleryId}/sharing/reschedule:
    put:
      consumes:
      - application/json
      description: Updates the expiry date for a shared gallery and disables sharing
      parameters:
      - description: Gallery ID
        format: objectId
        in: path
        name: galleryId
        required: true
        type: string
      - description: Reschedule sharing request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.rescheduleGallerySharingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Sharing successfully rescheduled
        "404":
          description: Gallery not found
          schema:
            additionalProperties:
              type: string
            type: object
        "405":
          description: Sharing already inactive
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reschedule gallery sharing expiry
      tags:
      - gallery
swagger: "2.0"
